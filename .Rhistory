devtools::install_github("AndersenLab/easyfulcrum")
devtools::install_github("AndersenLab/easyfulcrum")
install.packages("devtools")
sessionInfo()
devtools::install_github("AndersenLab/easyfulcrum")
sessionInfo()
devtools::install_github("AndersenLab/easyfulcrum")
load("~/Desktop/ForTim.RData")
load("~/Desktop/ForTim.RData")
load("/Users/timcrombie/Desktop/ForTim.RData")
version()
sessionInfo()
raw_geno_nema <- readGenotypes(gsKey = c("11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- easyfulcrum::readGenotypes(gsKey = c("11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- easyfulcrum::readGenotypes(gsKey = c("11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"))
readGenotypes
?readGenotype
library(easyfulcrum)
?readGenotype
?readGenotypes
raw_geno_nema <- easyfulcrum::readGenotypes(gsKey = "11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o", col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- readGenotypes(gsKey = c("1eviRoe0NyIEkIexM6c_oTVTX6U4ndPx-hkXJvkjhqWM"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- easyfulcrum::readGenotypes(gsKey = "11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o")
raw_geno_nema <- easyfulcrum::readGenotypes(gsKey = "11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o")
raw_geno_nema <- readGenotypes(gsKey = c("1DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"))
raw_geno_nema <- easyfulcrum::readGenotypes(gsKey = "11DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o")
raw_geno_nema <- readGenotypes(gsKey = c("1DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc"))
raw_geno_nema <- readGenotypes(gsKey = c("1DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- readGenotypes(gsKey = c("1DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- readGenotypes(gsKey = c("1DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
raw_geno_nema <- readGenotypes(gsKey = c("1DpsOa6C6zMx9qxq8BthusiiVK8Lw-7S5bKTdcMoaN7o"), col_types = "cDDdcdcddddddDcDDdcdcdddddddcdcccddccc")
test <- fread("~/Desktop/ForTim.csv")
test <- data.table::fread("~/Desktop/ForTim.csv")
View(test)
?commandArgs
#==============================================#
# Arguments                                    #
#==============================================#
# [1]: full path to project directory
# [2]: profile for pipeline usage - NEED TO IMPLEMENT
args <- "/projects/b1059/projects/Tim/dauerFrac-nf/CP_test" # for debugging
#==============================================#
# Make Metadata                                #
#==============================================#
projDir <- args[1]
raw_imagesDir <- paste0(projDir, "/raw_images")
load("~/Desktop/CellProfiler-Analysis_20201210_toxin14A_data_1609973542SJW.RData")
View(L1_N2_HB101_100w.model.outputs)
devtools::install_github("AndersenLab/easyXpress")
browseVignettes(package = "easyXpress")
raw <- easyXpress::readXpress(filedir = "~/Desktop/", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
raw <- easyXpress::readXpress(filedir = "~/Desktop", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
raw <- easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
load("/Users/timcrombie/Downloads/CP_test_Analysis-20220425.RData")
raw <- easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
raw <- easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
raw <- easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
View(raw)
View(raw)
easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
debug(easyXpress::readXpress)
easyXpress::readXpress(filedir = "~/Downloads", rdafile = "CP_test_Analysis-20220425.RData", design = FALSE)
browseVignettes(package = "easyXpress")
library(easyXpress)
library(tidyverse)
library(easyXpress)
# read in data from Sam
sam <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/CellProfiler-Analysis_20220203_GWA10_data_1644290191SJW.RData")
# read in data from Sam
sam <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10")
# read in data from Sam
sam <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10", rdafile = "20220203_GWA10_Analysis-20220506.RData")
# read in data from Sam
sam <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10", rdafile = "20220203_GWA10_Analysis-20220506.RData")
tim <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10", rdafile = "20220203_GWA10_Analysis-20220506.RData")
# read in data from Sam
sam <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10", rdafile = "CellProfiler-Analysis_20220203_GWA10_data_1644290191SJW.RData")
View(sam)
View(tim)
View(tim)
View(sam)
glimpse(sam)
glimpse(tim)
# read in data from Sam
sam <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10", rdafile = "CellProfiler-Analysis_20220203_GWA10_data_1644290191SJW.RData") %>%
mutate(id = paste0(Metadata_Plate, Metadata_Well))
tim <- easyXpress::readXpress("/Volumes/Macintosh HD/Users/timcrombie/Desktop/20220203_GWA10", rdafile = "20220203_GWA10_Analysis-20220506.RData") %>%
mutate(id = paste0(Metadata_Plate, Metadata_Well))
# filter to whats in Tim
sam_proc <- sam %>%
dplyr::filter(id %in% tim$id)
# read in data from Sam
sam <- easyXpress::readXpress("~/Desktop/work_share/cellprofiler_nf_output_testing/data/20220203_GWA10", rdafile = "CellProfiler-Analysis_20220203_GWA10_data_1644290191SJW.RData") %>%
mutate(id = paste0(Metadata_Plate, Metadata_Well))
tim <- easyXpress::readXpress("~/Desktop/work_share/cellprofiler_nf_output_testing/data/20220203_GWA10", rdafile = "20220203_GWA10_Analysis-20220506.RData") %>%
mutate(id = paste0(Metadata_Plate, Metadata_Well))
# filter to whats in Tim
sam_proc <- sam %>%
dplyr::filter(id %in% tim$id)
# set working directory
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
#====================================================================#
# dauer assay Protocol3
#====================================================================#
# Define a vector of your experiment directories. Can load more
dir1 <- c("data/raw/20220427_dauerProtocol3")
# Read in the data using easysorter: https://github.com/AndersenLab/easysorter
raw1 <- easysorter::read_data(dir1)
# look at score data for each color channel
score_proc1 <- as.data.frame(raw1[1]) %>%
dplyr::filter(call50 != "bubble", contamination != "TRUE", !is.na(strain)) %>%
dplyr::mutate(well = paste(plate,row,col, sep = ""))
d3 <- score_proc1 %>%
dplyr::distinct(date, plate, row, col, strain, condition) %>%
dplyr::mutate(well = paste0(row))
library(tidyverse)
library(EMCluster)
# set working directory
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
#====================================================================#
# dauer assay Protocol3
#====================================================================#
# Define a vector of your experiment directories. Can load more
dir1 <- c("data/raw/20220427_dauerProtocol3")
# Read in the data using easysorter: https://github.com/AndersenLab/easysorter
raw1 <- easysorter::read_data(dir1)
# look at score data for each color channel
score_proc1 <- as.data.frame(raw1[1]) %>%
dplyr::filter(call50 != "bubble", contamination != "TRUE", !is.na(strain)) %>%
dplyr::mutate(well = paste(plate,row,col, sep = ""))
d3 <- score_proc1 %>%
dplyr::distinct(date, plate, row, col, strain, condition) %>%
dplyr::mutate(well = paste0(row))
write.csv(d3, file = "~/Desktop/dauer_protocol3_design.csv")
knitr::opts_chunk$set(echo = TRUE)
# Define a vector of your experiment directories. Can load more
dirs1 <- c("data/raw/20220504_dauerProtocol4")
# Read in the data using easysorter: https://github.com/AndersenLab/easysorter
standard_raw <- easysorter::read_data(dirs1)
# set working directory
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
dirs1 <- c("/Users/timcrombie/repos/dauer_assay_protocol/data/raw/20220504_dauerProtocol4")
# Read in the data using easysorter: https://github.com/AndersenLab/easysorter
standard_raw <- easysorter::read_data(dirs1)
# look at score data for each color channel
score_proc1 <- as.data.frame(standard_raw[1]) %>%
dplyr::filter(call50 != "bubble", contamination != "TRUE", !is.na(strain)) %>%
dplyr::mutate(well = paste(plate,row,col, sep = ""))
d4 <- score_proc1 %>%
dplyr::distinct(date, plate, row, col, strain, condition) %>%
dplyr::mutate(well = paste0(row))
View(d4)
d4 <- score_proc1 %>%
dplyr::distinct(date, plate, row, col, strain, condition) %>%
dplyr::mutate(well = paste0(row, col))
write.csv(d4, file = "~/Desktop/dauer_protocol4_design.csv")
